(*
  Reflection 2
*)

{$define smart}
{$DEFINE REFLECTION}

{$loadlib RefCalculationsLib.dll}

{$i ./lib/core/Hooks.simba}
{$i ./lib/core/Constants.simba}
{$i ./lib/core/Core.simba}
{$i ./lib/core/Tiles.simba}
{$i ./lib/core/Interfaces.simba}
{$i ./lib/core/Menu.simba}

{$i ./lib/animable/characters/MyPlayer.simba}
{$i ./lib/animable/characters/Players.simba}
{$i ./lib/animable/characters/NPCs.simba}
{$i ./lib/animable/objects/Objects.simba}

{$i ./lib/ground/GroundItems.simba}

{$i ./lib/mapwalk/MapWalk.simba}

{$i ./lib/chat/NPCChat.simba}

{$i ./lib/misc/Timing.simba}

{$i ./lib/gametab/GameTab.simba}
{$i ./lib/gametab/Inventory.simba}

(*
R_UpdateHooks
~~~~~~~~~~~~~

.. code-block:: pascal

    procedure R_UpdateHooks;

Checks version of hooks vs current version online, and
  attempts to update to latest version!

.. note::

  by Naike, Harry

*)
procedure R_UpdateHooks;
var
  MyFile, ClientRev, RevHook, I, ClientUp: Integer;
  Src,S: String;
begin
  ClientUp := InitializeHTTPClient(False, False);
  SetHTTPUserAgent(ClientUp,'Simba Reflection/' + ToStr(ClientVersion) + '.' + ToStr(HookRev));
  Src := GetHTTPPage(ClientUp,'http://reflection.harry.lu/Hooks.simba');
  FreeHTTPClient(ClientUp);

  S := Src;
  I := Pos('ClientVersion', S);
  Delete(S, 1, I+15);
  S := Copy(S, 1, Pos(';', S)-1);
  ClientRev := StrToIntDef(S, -1);
  if ClientRev = -1 then
    WriteLn('[Reflection] Failed to get Hook Revision!');

  S := Src;
  I := Pos('HookRev', S);
  Delete(S, 1, I+9);
  S := Copy(S, 1, Pos(';', S)-1);
  RevHook := StrToIntDef(S, -1);
  if RevHook = -1 then
    WriteLn('[Reflection] Failed to get Hook Revision!');

  If (ClientRev <= ClientVersion) and (RevHook <= HookRev) then
  begin
    if(SmartGetFieldInt(0, hook_static_LoginIndex) = -1) then
    begin
      WriteLn('[Reflection] No new hooks have been uploaded yet; please be patient!');
      if not R_ContinueIfOutdated then
        TerminateScript;
    end;
  end else
  begin
    WriteLn('[Reflection] You''re using outdated hooks (version ' + ToStr(ClientVersion) + '.' + ToStr(HookRev) + '); updating you to version ' + ToStr(ClientRev) + '.' + ToStr(RevHook) + '!');
    WriteLn('[Reflection] If you manually fixed your hooks, please make sure hookrevision values are greater than or equal to the online hooks to prevent overwriting.');
    MyFile := RewriteFile(AppPath + 'includes/Reflection3/lib/core/Hooks.simba', False);
    WriteFileString(MyFile, Src);
    CloseFile(MyFile);
    WriteLn('[Reflection] Updated you to ' + ToStr(ClientRev) + '.' + ToStr(RevHook) + '; please restart your script!');
    TerminateScript;
  end;
end;

