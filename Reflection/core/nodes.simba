//------------------------------------------------------------------\\
//--                  Simba Reflection Library                    --||
//--                        Nodes Wrapper                         --||
//--            By: pyroryan (pyro.ryan1988@gmail.com)            --||
//--              Also has some other random stuff                --||
//------------------------------------------------------------------//

{*******************************************************************************
Function R_GetNodes(nodeCache : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetNodes(nodeCache : Integer) : Integer;
begin
  Result := SmartGetFieldObject(nodeCache, hook_nodecache_GetNodes);
end;

{*******************************************************************************
function R_GetNode(nodes, index : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetNode(nodes, index : Integer) : Integer;
var
  node : Integer;
begin
  node := SmartGetFieldArrayObject(nodes, '', index);
  Result := SmartGetFieldObject(node, hook_node_Next);
  SmartFreeObject(node);
end;

{*******************************************************************************
function R_GetNodeNext(node : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetNodeNext(node : Integer) : Integer;
begin
  Result := SmartGetFieldObject(node, hook_node_Next);
end;

{*******************************************************************************
function R_GetNodePrevious(node : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetNodePrevious(node : Integer) : Integer;
begin
  Result := SmartGetFieldObject(node, hook_node_Previous);
end;

{*******************************************************************************
function R_GetNodeID(node : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetNodeID(node : Integer) : Integer;
begin
  Result := SmartGetFieldLongL(node, hook_node_GetID);
end;

{*******************************************************************************
function R_GetNodeHead(nodeList : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetNodeHead(nodeList : Integer) : Integer;
var
  tail : Integer;
begin
  tail := SmartGetFieldObject(nodeList, hook_nodelist_Head);
  Result := R_GetNodeNext(tail);
  SmartFreeObject(tail);
end;

{*******************************************************************************
function R_GetNodeList(node : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetNodeList(node : Integer) : Integer;
begin
  Result := SmartGetFieldObject(node, hook_nodelistcache_GetNodeList);
end;

{*******************************************************************************
function R_GetNodeSubNext(nodeSub : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetNodeSubNext(nodeSub : Integer) : Integer;
begin
  Result := SmartGetFieldObject(nodeSub, hook_nodesub_Next);
end;

{*******************************************************************************
function R_GetNodeSubHead(nodeSubList : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetNodeSubHead(nodeSubList : Integer) : Integer;
var
  tail : Integer;
begin
  tail := SmartGetFieldObject(nodeSubList, hook_nodesublist_getHead);
  Result := R_GetNodeSubNext(tail);
  SmartFreeObject(tail);
end;

{*******************************************************************************
function R_GetArraySize(arrayObject : Integer) : Integer;
By: pyroryan
Description:
*******************************************************************************}
function R_GetArraySize(arrayObject : Integer) : Integer;
begin
  Result := SmartGetFieldArraySize(arrayObject, '', 1);
end;
