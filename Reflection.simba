//----------------------------------------------------------------------------//
//--                          Reflection Library                            --//
//----------------------------------------------------------------------------//
//-- by: Drags111, pyroryan, mormonman, Benland100, Method, Echo_, N1ke,    --//
//--   Nava2, and others! If I forgot your name let me know :)              --//
//----------------------------------------------------------------------------//

{$DEFINE SMART}
{$DEFINE REFLECTION}

//----------------------------------------------------------------------------//
//--                      Reflection Core Includes                          --//
//--                                                                        --//
//--               Low Level Routines for Basic Function.                   --//
//----------------------------------------------------------------------------//
{$i ./lib/core/constants.simba}
{$i ./lib/core/hooks.simba}
{$i ./lib/core/nodes.simba}
{$i ./lib/core/menu.simba}
{$i ./lib/core/tiles.simba}
{$i ./lib/core/interfaces.simba}

//----------------------------------------------------------------------------//
//--                      Reflection Common Includes                        --//
//--                                                                        --//
//--     Banking, Walking, Inventory, and other commonly used routines.     --//
//----------------------------------------------------------------------------//
{$i ./lib/characters/npcs.simba}
{$i ./lib/characters/players.simba}

{$i ./lib/mapwalk/mapwalk.simba}

{$i ./lib/ground/objects.simba}
{$i ./lib/ground/grounditems.simba}

{$i ./lib/inventory/inventory.simba}
{$i ./lib/inventory/equipment.simba}

{$i ./lib/bank/bank.simba}
{$i ./lib/bank/depositbox.simba}

{$i ./lib/chat/chat.simba}

{$i ./lib/misc/other.simba}
{$i ./lib/misc/items.simba}

(*
R_GetCurrentGit
~~~~~~~~~~~

.. code-block:: pascal

    function R_GetCurrentGit(whatKind: string): Integer;

Gets Hooks.simba information from pyroryan's server.

.. note::

  by Naike, Harry

*)
function R_GetCurrentGit(whatKind: string): Integer;
var
  S: String;
  I: Integer;
begin
  case whatKind of
    'clientversion':
    begin
      S := GetPage('http://pyroryan.net46.net/reflection/Hooks.simba');
      I := Pos('ClientVersion', S);
      Delete(S, 1, I+15);
      S := Copy(S, 1, Pos(';', S)-1);
      Result := StrToIntDef(S, -1);
      if Result = -1 then
        WriteLn('[Reflection] Failed to get Hook Revision!');
    end;

    'hookrevision':
    begin
      S := GetPage('http://pyroryan.net46.net/reflection/Hooks.simba');
      I := Pos('HookRev', S);
      Delete(S, 1, I+9);
      S := Copy(S, 1, Pos(';', S)-1);
      Result := StrToIntDef(S, -1);
      if Result = -1 then
        WriteLn('[Reflection] Failed to get Hook Revision!');
    end;
    else
      WriteLn('[Reflection] r_GetCurrentGit - invalid option!');
  end;
end;

(*
R_UpdateHooks
~~~~~~~~~~~

.. code-block:: pascal

    Procedure R_UpdateHooks(terminate: boolean);

Tries to update to new hooks!

.. note::

  by Naike, Harry

*)
Procedure R_UpdateHooks(terminate: boolean);
var
  myFile, ClientRev, RevHook: Integer;
begin
  R_UseDebug := True;
  ClientRev := r_GetCurrentGit('clientversion');
  RevHook := r_GetCurrentGit('hookrevision');
  If (ClientRev <= ClientVersion) and (RevHook <= HookRev) then
  begin
    if(SmartGetFieldInt(0, hook_static_LoginIndex) = -1) then
    begin
      Writeln('[Reflection] No new hooks have been uploaded yet; please be patient!');
      if (terminate) then
        TerminateScript;
    end;
  end else
  begin
    Writeln('[Reflection] You''re using outdated hooks (version ' + ToStr(ClientVersion) + '.' + ToStr(HookRev) + '); updating you to version' + ToStr(ClientRev) + '.' + ToStr(RevHook) + '!');
    Writeln('[Reflection] If you manually fixed your hooks, please make sure hookrevision values are greater than or equal to the online hooks to prevent overwriting.');
    myFile := RewriteFile(AppPath + 'includes\Reflection_Dev\Reflection\core\hooks.simba', False);
    WriteFileString(myFile, GetPage('http://pyroryan.net46.net/reflection/Hooks.simba'));
    CloseFile(myFile);
    Writeln('[Reflection] Updated you to ' + ToStr(ClientRev) + '.' + ToStr(RevHook) + '; please restart your script!');
    if (terminate) then
      TerminateScript;
  end;
end;

(*
SetupReflectionEx
~~~~~~~~~~~

.. code-block:: pascal

    Procedure SetupReflectionEx(Update: Boolean);

Sets up reflection constants, and checks if hooks are outdated.
Will try to update if outdated.

.. note::

  by Reflection Dev Team

*)
Procedure SetupReflectionEx(Update: Boolean);
begin
  R_SetupConstants;
  If Update then
    R_UpdateHooks(R_UpdateKill)
  else
  begin
    if(SmartGetFieldInt(0, hook_static_LoginIndex) = -1) then
    begin
      Writeln('[Reflection] Hooks outdated!');
      if (R_UpdateKill) then
        TerminateScript;
    end;
  end;
end;

(*
SetupReflection
~~~~~~~~~~~

.. code-block:: pascal

    Procedure SetupReflection;

Sets up Reflection.

.. note::

  by Reflection Dev Team

*)
Procedure SetupReflection;
begin
  SetupReflectionEx(True);
end;
