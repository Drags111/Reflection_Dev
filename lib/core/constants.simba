(*
Constants
=========

Contains all globally used constants and variables.

*)

{ const NULL_INT, NULL_STRING;
  Description: Our constants for "null" values. }
const
  NULL_INT        = -1;
  NULL_STRING     = '';

  {bank}
  INTERFACE_BANK = 762;
  INTERFACE_BANK_BTN_CLOSE = 43;
  INTERFACE_BANK_BTN_DEPOSITBAG = 33;
  INTERFACE_BANK_BTN_DEPOSITEQUIP = 35;
  INTERFACE_BANK_BTN_DEPOSITBEAST = 37;

  {Slots}
  INTERFACE_BANK_SLOTS = 93;
  INTERFACE_BANK_SLOTS_MAX = 515;
  INTERFACE_BANK_SCROLLBAR = 114;
  INTERFACE_BANK_SCROLLBAR_BAR = 1;
  INTERFACE_BANK_SCROLLBAR_BARTOP = 2;
  INTERFACE_BANK_SCROLLBAR_BARBOT = 3;
  INTERFACE_BANK_SCROLLBAR_UP = 4;
  INTERFACE_BANK_SCROLLBAR_DOWN = 5;

  {Pinscreen}
  INTERFACE_PINSCREEN = 13;

  TEXTURE_BANKTABSELECTED = 1419;

  {Constant used to get the item ID of player's equipment.}
  EQUIPMENT_CONSTANT = 1073741824;

  {Equipment slot numbers}
  EQUIPMENT_HELMET     = 0;
  EQUIPMENT_CAPE       = 1;
  EQUIPMENT_NECKLACE   = 2;
  EQUIPMENT_WEAPON     = 3;
  EQUIPMENT_TORSO      = 4;
  EQUIPMENT_SHIELD     = 5;
  EQUIPMENT_LEGS       = 6;
  EQUIPMENT_GLOVES     = 7;
  EQUIPMENT_BOOTS      = 8;
  EQUIPMENT_RING       = 9;
  EQUIPMENT_AMMO       = 10;

{ var R_UseDebug: Boolean;
  Description: Whether or not to display debugging during run-time. }
var
  R_UseDebug: Boolean;
  R_ContinueIfOutdated: Boolean;

type
{Stores the rotation matrix used by the client to render to the main
 screen, along with offsets.}
  TRenderData = record
    xOff,xX,xY,xZ : extended;
    yOff,yX,yY,yZ : extended;
    zOff,zX,zY,zZ : extended;
  end;

{Stores information about the rendered world including ranges
 for acceptable values, and scaling factors.}
  TRender = record
    xScale,yScale : extended;
    xMin,xMax : extended;
    yMin,ymax : extended;
    zMax,zMin : extended;
  end;

{equivlent to a TPoint, but signifies a global tile position in the
 Runescape client. Not to be used for any other purpose.}
  TTile = TPoint;

{Same as TTile, but in an array.}
  TTileArray = array of TTile;

{ type TRSChild;
  Contains informations pertaining to Interface Children}
type
  TRSChild = record
    Actions: TStringArray;
    ID, Parent, Stack: Integer;
    TextureID, ModelID, ModelZoom: Integer;
    RelativeX, RelativeY, Width, Height: Integer;
    X, Y: Integer;
    Bounds: TBox;
    Text, Name: String;
    IsHidden: Boolean;
    VScrollSize, VScrollPosition, VThumbSize: Integer;
    HScrollSize, HScrollPosition, HThumbSize: Integer;
    BoundsArrayIndex: Integer;
  end;

{ type TRSComponent;
  Contains informations pertaining to Interface Children Components. Same as
  TRSChild but different name for referencing purposes.}
type
  TRSComponent = TRSChild;

type
  TRSPlayer = record
    Tile: TTile;
    Name: String;
    Index, Level, Team, Height: Integer;
    Animation, Motion, HPRatio: Integer;
    InCombat: Boolean;
    WalkQueueX, WalkQueueY: Integer;
    Interacting, Orientation: Integer;
  end;

type
  {Array of TRSPlayer}
  TRSPlayerArray = array of TRSPlayer;

{ type TBankItem;
  Contains informations pertaining to bank items. }
type
  TBankItem = Record
    ID, Slot, StackSize: Integer;
    Name: String;
  end;

{ type TBankItemArray;
  An array of bank items. }
type
  TBankItemArray = array of TBankItem;

{ type TRSClient;
  Contains function pointers to all of the static hooks. }
type
  TRSClient = record
    LoginIndex: function: Integer;
    ChatLines: function: Integer;
    CameraYaw: function: Integer;
    MyPlayer: function: Integer;
    BaseX: function: Integer;
    BaseY: function: Integer;
    NPCIndexArray: function(Index: Integer): Integer;
    LoopCycle: function: Integer;
    NPCNC: function: Integer;
    ItemDefLoader: function: Integer;
    ObjectDefLoader: function: Integer;
    NPCNodes: function(Index: Integer): Integer;
    NPCCount: function: Integer;
    GroundSettingsArray: function(Plane, X, Y: Integer): Integer;
    LoadedPlane: function: Integer;
    PlaneArray: function(Index: Integer): Integer;
    Toolkit: function: Integer;
    CollapsedMenuItems: function: Integer;
    MenuOptionCount: function: Integer;
    MenuCollapsedOptionsCount: function: Integer;
    MenuX: function: Integer;
    MenuY: function: Integer;
    MenuWidth: function: Integer;
    MenuHeight: function: Integer;
    MenuX2: function: Integer;
    MenuY2: function: Integer;
    MenuWidth2: function: Integer;
    MenuHeight2: function: Integer;
    MenuNodeList: function: Integer;
    MenuOpen: function: Boolean;
    IsMenuTabbed: function: Boolean;
    Interfaces: function: Integer;
    ValidInterfaces: function(Index: Integer): Boolean;
    InterfaceBoundsArray: function(Index: Integer): Integer;
    InterfaceDismissBounds: function(Index: Integer): Boolean;
    InterfaceNC: function: Integer;
    Settings: function: Integer;
    GroundItemCache: function: Integer;
    GetGroundDataArray: function(Plane: Integer): Integer;
    SkillExperiences: function(Index: Integer): Integer;
    SkillLevels: function(Index: Integer): Integer;
    MapAngle: function: Extended;
    DestX: function: Integer;
    DestY: function: Integer;
    PlayerCount: function: Integer;
    PlayerIndexArray: function(Index: Integer): Integer;
    Players: function(Index: Integer): Integer;
    CamPosX: function: Integer;
    CamPosY: function: Integer;
    GroundTiles: function(Plane, X, Y: Integer): Integer;
    CrossHairColor: function: Integer;
  end;

var
  Client: TRSClient;

(*
R_SetupGlobals
~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure R_SetupGlobals;

Sets up variables that need to be declared.

.. note::

  by Drags111

*)
procedure R_SetupGlobals;
begin
  R_UseDebug := True;
end;

Procedure R_Debug(Debug, InTags: String);
begin
  if not R_UseDebug then Exit;
  If (InTags = '') then
    Writeln('[Reflection] ' + Debug)
  else
    Writeln('[' + InTags + '] ' + Debug);
end;
