//------------------------------------------------------------------\\
//--               Simba Reflection Library                       --||
//--                    Other Routines                            --||
//------------------------------------------------------------------//

//---                      Constants                              --//
const
  CROSSHAIR_NONE = 0;
  CROSSHAIR_YELLOW = 1;
  CROSSHAIR_RED = 2;
  INTERFACE_LOGIN_SCREEN = 596;
  INTERFACE_LOBBY_SCREEN = 907;

//Used in antirandoms
type
  TDropItem = Record
    ID, StackSize: Integer;
    Tile: TTile;
    Name: String;
  end;

function NULL_DROPITEM: TDropItem;
begin
  with Result do
  begin
    ID := NULL_INT;
    StackSize := NULL_INT;
    Tile := NULL_TILE;
    Name := NULL_STRING;
  end;
end;

function R_NewDropItem(IDa, SS: Integer; T: TTile; N: String): TDropItem;
begin
  with Result do
  begin
    ID := IDa;
    StackSize := SS;
    Tile := T;
    Name := N;
  end;
end;

{*******************************************************************************
function R_GetCrossHairColor: Integer;
By: pyroryan
Description: Each crosshair stays up for about 500 milliseconds
CROSSHAIR_RED: clicked on something (red crosshairs).
CROSSHAIR_YELLOW: clicked on ground (yellow crosshairs).
CROSSHAIR_NONE: nothing (no crosshairs)
*******************************************************************************}
function R_GetCrossHairColor: Integer;
begin
  Result := SmartGetFieldInt(0, hook_static_GetCrossHairColor);
end;

{*******************************************************************************
function R_WaitCrossHairColor(CrossColor: Integer; Time: Integer): Boolean;
By: pyroryan & Naike
Description: Each crosshair stays up for about 500 milliseconds
CROSSHAIR_RED: clicked on something (red crosshairs).
CROSSHAIR_YELLOW: clicked on ground (yellow crosshairs).
CROSSHAIR_NONE: nothing (no crosshairs)
Waits for a crosshair color to appear.
*******************************************************************************}
function R_WaitCrossHairColor(CrossColor: Integer; Time: Integer): Boolean;
var
  T: Integer;
begin
  Result := False;
  T := GetSystemTime + Time;
  while (GetSystemTime < T) do
  begin
    if (r_GetCrossHairColor = CrossColor) then
    begin
      Result := True;
      Exit;
    end;
    Wait(20 + Random(10));
  end;
end;

{*******************************************************************************
function R_LoginScreen: Boolean;
Description: Returns true if the login screen interface is present.
*******************************************************************************}
function R_LoginScreen: Boolean;
begin
  Result := R_ValidInterface (INTERFACE_LOGIN_SCREEN);
end;

{*******************************************************************************
function R_LobbyScreen: Boolean;
Description: Returns true if at the lobby screen.
*******************************************************************************}
function R_LobbyScreen: Boolean;
begin
  Result := R_ValidInterface (INTERFACE_LOBBY_SCREEN);
end;
