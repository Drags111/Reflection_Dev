const
  RAbyssConst_Append_E = 8994;
  RAbyssConst_Append_N = 8995;
	RAbyssConst_Append_W = 8996;
	RAbyssConst_Append_S = 8997;

function RAbyss_InRandom: Boolean;
var
  Appendage: TRSObject;
begin
  Appendage := R_GetObject(RAbyssConst_Append_N, OBJ_INTERACTABLE, 15);
  Result := Appendage <> NULL_RSOBJECT;
end;

function RAbyss_DoTileOffset(TileBox: TBox): TTile;
var
  TileA, TileB: TPoint;
begin
  TileA := Point(TileBox.X1, TileBox.Y1);
  TileB := Point(TileBox.X2, TileBox.Y2);
  if R_DistanceFromTile(TileA) < R_DistanceFromTile(TileB) then
    Result := TileB
      else Result := TileA;
end;

function RAbyss_OddAppendage: Integer;
var
  ObjArr: array[0..3] of TRSObject;
  i: Integer;
begin
  Result := -1;
  for i := 0 to 3 do
  begin
    ObjArr[i] := R_GetObject(i + RAbyssConst_Append_E, OBJ_INTERACTABLE, 25);
    if ObjArr[i] = NULL_RSOBJECT then
      Exit;
    R_Debug('ObjArr['+ToStr(i)+'].ModelID: ' +ToStr(ObjArr[i].ModelID), 'Abyss');
  end;

  if (ObjArr[0].ModelID = ObjArr[1].ModelID)
    and (ObjArr[1].ModelID  = ObjArr[2].ModelID) then
    Result := RAbyssConst_Append_S;

  if (ObjArr[0].ModelID = ObjArr[2].ModelID)
    and (ObjArr[2].ModelID = ObjArr[3].ModelID) then
    Result := RAbyssConst_Append_N;

  if (ObjArr[0].ModelID = ObjArr[1].ModelID)
    and (ObjArr[1].ModelID = ObjArr[3].ModelID) then
    Result := RAbyssConst_Append_W;

  if (ObjArr[1].ModelID = ObjArr[2].ModelID)
    and (ObjArr[2].ModelID = ObjArr[3].ModelID) then
    Result := RAbyssConst_Append_E;
end;

function RAbyss_HandleAppendage(AppendageID: Integer): Boolean;
var
  Appendage: TRSObject;
  P, NewTile: TPoint;
  X, Y, T: Integer;
begin
  Appendage := R_GetObject(AppendageID, OBJ_INTERACTABLE, 25);
  if (Appendage = NULL_RSOBJECT) then
  begin
    R_Debug('Appendage not found', 'Abyss');
    Exit;
  end;

  NewTile := RAbyss_DoTileOffset(Appendage.TileArea);

  if(R_DistanceFromTile(NewTile) > 4)then
  begin
    if not R_WalkToTile(NewTile, 1, 0)then
    begin
      R_Debug('Unable to walk to Appendage.', 'Abyss');
      Exit;
    end;
    Wait(300+Random(50));
  end;

  P := R_TileToMS(NewTile, 550);
  MMouse(P.x, P.y, 10, 10);
  wait(25+RandoM(25));
  if not R_OptionExists('operate') then
    Exit;

  GetMousePos(X, Y);
  Mouse(X, Y, 0, 0, false);
  wait(25+RandoM(25));
  Result := R_ChooseOption('operate');
  if not Result then
    Exit;

  R_WaitToMove(3000);
  R_Flag;

  MarkTime(T);
  while RAbyss_InRandom and (TimeFromMark(T) < 8000) do
    Wait(500);

  Result := not RAbyss_InRandom;
end;

function RAbyss_Solve: Boolean;
var
  T, AppendageID: Integer;
begin
  Result := False;

  MarkTime(T);
  while (RAbyss_InRandom and (TimeFromMark(T) < 180000)) do
  begin
    ClickContinue(True, True);

    AppendageID := RAbyss_OddAppendage;
    if (AppendageID < 0) then
    begin
      R_Debug('Odd appendage not found', 'Abyss');
      Continue;
    end;

    if not RAbyss_HandleAppendage(AppendageID) then
    begin
      R_Debug('Unable to click appendage', 'Abyss');
    end;

  end;

  Wait(RandomRange(2000, 3000));
  R_ClickToContinue;

  Result := not RAbyss_InRandom;
end;
