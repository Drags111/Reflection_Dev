var
  RDemonVars_NPC: TNPC;
  RDemonVars_Signs: array[0..3] of Integer;

function RDemon_InRandom: Boolean;
begin
  Result := R_FindNPC(2790, True, RDemonVars_NPC);
  if Result then
    Result := PointInBox(R_GetMyPos, IntToBox(3159, 4818, 3167, 4822));
end;

function RDemon_NeedsToTalk: Boolean;
var
  Text: String;
begin
  Result := False;
  Text := R_GetInterfaceText(372, 3);
  if(Pos('Follow Sergeant Damien''s orders!', Text) > 0)then
    Result := True;
end;

function RDemon_TalkTo: Boolean;
var
  P: TPoint;
  T, T2: Integer;
begin
  Result := False;
  if not R_FindNPC(2790, True, RDemonVars_NPC)then
    Exit;
  MarkTime(T);
  while(TimeFromMark(T) < 10000) and (not Result)do
  begin
    if not R_FindNPC(2790, True, RDemonVars_NPC)then
      Exit;
    P := R_TileToMS(RDemonVars_NPC.Tile, RDemonVars_NPC.Height/2);
    Mouse(P.x, P.y, 0, 0, false);
    wait(25+Random(25));
    Result := R_ChooseOption('talk');
    if not Result then
    begin
      MMouse(P.x-50, p.y-50, 10, 10);
      Continue;
    end;
    MarkTime(T2);
    while(TimeFromMark(T2) < 10000)do
    begin
      Wait(100+Random(100));
      if not RDemon_NeedsToTalk then
        Exit;
    end;
  end;
end;

procedure RDemon_LoadSigns;
var
  Setting: Integer;     //RDemonVars_Signs
begin
  Setting := R_Getsetting(531);
  case Setting of
    668: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 4;
    end;
    675: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 4;
    end;
    724: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 4;
    end;
    738: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 4;
    end;
    787: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 4;
    end;
    794: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 4;
    end;
    1116: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 3;
    end;
    1123: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 3;
    end;
    1228: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 3;
    end;
    1249: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 3;
    end;
    1291: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 3;
    end;
    1305: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 3;
    end;
    1620: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 2;
    end;
    1634: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 2;
    end;
    1676: begin
      RDemonVars_Signs[0] := 1;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 2;
    end;
    1697: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 1;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 2;
    end;
    1802: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 2;
    end;
    1809: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 1;
      RDemonVars_Signs[3] := 2;
    end;
    2131: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 1;
    end;
    2138: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 4;
      RDemonVars_Signs[3] := 1;
    end;
    2187: begin
      RDemonVars_Signs[0] := 2;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 1;
    end;
    2201: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 2;
      RDemonVars_Signs[2] := 3;
      RDemonVars_Signs[3] := 1;
    end;
    2250: begin
      RDemonVars_Signs[0] := 3;
      RDemonVars_Signs[1] := 4;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 1;
    end;
    2257: begin
      RDemonVars_Signs[0] := 4;
      RDemonVars_Signs[1] := 3;
      RDemonVars_Signs[2] := 2;
      RDemonVars_Signs[3] := 1;
    end;
  end;
end;

function RDemon_GetMatTile: TTile;
var
  Icon: TInterfaceChild;
  I: Integer;
begin
  Result := Point(-1, -1);
  if not R_ValidInterface(148)then
    Exit;
  Icon := R_GetInterfaceChild(148, 0);
  I := -1;
  case Icon.ComponentID of
    10949: I := 1; //Starjumps
    10946: I := 2; //Pushups
    10948: I := 3; //Situps
    10947: I := 4; //Jog
  end;
  if(I = -1)then
  begin
    R_Debug('Unable to get the excersize ID', 'Drill Demon');
    Exit;
  end;
  RDemon_LoadSigns;
  case I of
    RDemonVars_Signs[0]: Result := Point(3160, 4820);
    RDemonVars_Signs[1]: Result := Point(3162, 4820);
    RDemonVars_Signs[2]: Result := Point(3164, 4820);
    RDemonVars_Signs[3]: Result := Point(3166, 4820);
  end;
end;

function RDemon_Solve: Boolean;
var
  T: Integer;
  Tile: TTile;
  P: TPoint;
begin
  Result := False;
  MarkTime(T);
  while(TimeFromMark(T) < 240000) and RDemon_InRandom do
  begin
    R_ClickToContinue;
    if(RDemon_NeedsToTalk)then
      RDemon_TalkTo
    else
    begin
      Tile := RDemon_GetMatTile;
      if(Tile.X = -1) or (Tile.Y = -1)then
        Continue;
      if not R_TileOnMS(Tile, 0)then
      begin
        R_WalkToTile(Tile, 0, 0);
        Wait(1000+Random(1000));
      end;
      P := R_TileToMS(Tile, 0);
      if(P.x = -1) or (P.y = -1)then
        Continue;
      Mouse(P.x, P.y, 3, 3, false);
      if not R_ChooseOption('mat')then
        Continue;
      if(Tile <> R_GetMyPos)then
      begin
        R_WaitToMove(3000);
        R_Flag;
      end;
      R_WaitToAnimate(5000);
      R_WaitToStopAnimating(10000);
      wait(800+Random(800));
    end;
    Wait(100+Random(250));
  end;
  Result := (not RDemon_InRandom) and (TimeFromMark(T) < 240000);
end;

